<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C Plus Plus</title>
    <url>/posts/7dc50664/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div id="postchat_postcontent"><meta name="referrer" content="no-referrer">

</div>]]></content>
      <categories>
        <category>CPP</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>【每日早报】-2025-01-03 - 星期五</title>
    <url>/posts/285d29da/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div id="postchat_postcontent"><!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>每日早报</title>
</head>

<body>
    <div style="text-align: center;"> <img src="https://file.alapi.cn/60s/202501031735837202.png" alt="每日早报" width="100%"> </div>
</body>

</html></div>]]></content>
      <categories>
        <category>每日早报</category>
      </categories>
      <tags>
        <tag>每日早报</tag>
      </tags>
  </entry>
  <entry>
    <title>Git</title>
    <url>/posts/69c3279c/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div id="postchat_postcontent"><meta name="referrer" content="no-referrer">

<h1 id="Git分布式版本控制工具"><a href="#Git分布式版本控制工具" class="headerlink" title="Git分布式版本控制工具"></a>Git分布式版本控制工具</h1><h2 id="Git-概述："><a href="#Git-概述：" class="headerlink" title="Git 概述："></a>Git 概述：</h2><h3 id="开发场景中的应用"><a href="#开发场景中的应用" class="headerlink" title="开发场景中的应用"></a>开发场景中的应用</h3><ol>
<li>备份</li>
<li>版本控制，代码还原</li>
<li>协同开发</li>
<li>追溯问题代码的编写人和编写时间</li>
</ol>
<h3 id="版本控制器的方式"><a href="#版本控制器的方式" class="headerlink" title="版本控制器的方式"></a>版本控制器的方式</h3><ol>
<li><p>集中式版本控制方式：SVN，CVS</p>
<p><img src="https://hexo-1308519941.cos.ap-guangzhou.myqcloud.com/blog/202501031700599.png" alt="SVN"></p>
</li>
<li><p>分布式版本控制方式：Git</p>
<p><img src="https://hexo-1308519941.cos.ap-guangzhou.myqcloud.com/blog/202501031701812.png" alt="Git"></p>
</li>
</ol>
<h3 id="Git工作流程"><a href="#Git工作流程" class="headerlink" title="Git工作流程"></a>Git工作流程</h3><p><img src="https://hexo-1308519941.cos.ap-guangzhou.myqcloud.com/blog/202501031704980.png" alt="Git工作流程"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. <span class="built_in">clone</span>（克隆）: 从远程仓库中克隆代码到本地仓库</span><br><span class="line">2. checkout （检出）:从本地仓库中检出一个仓库分支然后进行修订</span><br><span class="line">3. add（添加）: 在提交前先将代码提交到暂存区</span><br><span class="line">4. commit（提交）: 提交到本地仓库。本地仓库中保存修改的各个历史版本</span><br><span class="line">5. fetch (抓取) ： 从远程库，抓取到本地仓库，不进行任何的合并动作，一般操作比较少。</span><br><span class="line">6. pull (拉取) ： 从远程库拉到本地库，自动进行合并(merge)，然后放到到工作区，相当于</span><br><span class="line">fetch+merge</span><br><span class="line"> 7. push（推送） : 修改完成后，需要和团队成员共享代码时，将代码推送到远程仓库</span><br></pre></td></tr></table></figure>

<h1 id="Git安装与常用命令"><a href="#Git安装与常用命令" class="headerlink" title="Git安装与常用命令"></a>Git安装与常用命令</h1><h2 id="Git环境配置"><a href="#Git环境配置" class="headerlink" title="Git环境配置"></a>Git环境配置</h2><h3 id="下载与安装（win"><a href="#下载与安装（win" class="headerlink" title="下载与安装（win)"></a>下载与安装（win)</h3><p>下载地址：<a href="https://git-scm.com/%EF%BC%8C%E5%9C%A8%E5%AE%98%E7%BD%91%E4%B8%8B%E8%BD%BD%E4%B8%8B%E8%BD%BD%E5%99%A8%EF%BC%8C%E5%85%A8%E9%83%A8%E9%BB%98%E8%AE%A4%E5%8D%B3%E5%8F%AF%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%B7%B1%E8%AE%BE%E7%BD%AE%E8%B7%AF%E5%BE%84">https://git-scm.com/，在官网下载下载器，全部默认即可，也可以自己设置路径</a></p>
<p>查看是否安装成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git -v</span><br></pre></td></tr></table></figure>

<p><img src="https://hexo-1308519941.cos.ap-guangzhou.myqcloud.com/blog/202501031709100.png"></p>
<h3 id="Git-基础配置"><a href="#Git-基础配置" class="headerlink" title="Git 基础配置"></a>Git 基础配置</h3><p>设置用户名和邮箱</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name “xxx”</span><br><span class="line">git config --global user.email “xxx”</span><br></pre></td></tr></table></figure>

<p>查看配置信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name</span><br><span class="line"> git config --global user.email</span><br></pre></td></tr></table></figure>

<h3 id="为常用指令配置别名"><a href="#为常用指令配置别名" class="headerlink" title="为常用指令配置别名"></a>为常用指令配置别名</h3><ol>
<li><p>打开用户目录，创建 .bashrc 文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">touch ~/.bashrc</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置别名</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用于输出git提交日志</span></span><br><span class="line">alias git-log=&#x27;git log --pretty=oneline --all --graph --abbrev-commit&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用于输出当前目录所有文件及基本信息</span></span><br><span class="line">alias ll=&#x27;ls -al&#x27;</span><br></pre></td></tr></table></figure>
</li>
<li><p>启用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="解决GitBash乱码问题"><a href="#解决GitBash乱码问题" class="headerlink" title="解决GitBash乱码问题"></a>解决GitBash乱码问题</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global core.quotepath false</span><br></pre></td></tr></table></figure>

<p> ${git_home}&#x2F;etc&#x2F;bash.bashrc 文件最后加入下面两行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export LANG=&quot;zh_CN.UTF-8&quot;</span><br><span class="line"> export LC_ALL=&quot;zh_CN.UTF-8&quot;</span><br></pre></td></tr></table></figure>

<h2 id="搭建本地Git仓库"><a href="#搭建本地Git仓库" class="headerlink" title="搭建本地Git仓库"></a>搭建本地Git仓库</h2><ol>
<li>在电脑任意位置创建文件夹，打开git bash<br>  <img src="https://hexo-1308519941.cos.ap-guangzhou.myqcloud.com/blog/202501031728774.png"></li>
<li>执行命令git init</li>
</ol>
<p><img src="https://hexo-1308519941.cos.ap-guangzhou.myqcloud.com/blog/202501031730332.png"></p>
<h2 id="Git-基础操作指令-状态转换"><a href="#Git-基础操作指令-状态转换" class="headerlink" title="Git 基础操作指令(状态转换)"></a>Git 基础操作指令(状态转换)</h2><p><img src="https://hexo-1308519941.cos.ap-guangzhou.myqcloud.com/blog/202501031732698.png"></p>
<h3 id="查看当前状态"><a href="#查看当前状态" class="headerlink" title="查看当前状态"></a>查看当前状态</h3><p>作用：查看的修改的状态（暂存区、工作区）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>

<h3 id="添加工作区到暂存区-add"><a href="#添加工作区到暂存区-add" class="headerlink" title="*添加工作区到暂存区(add)"></a>*添加工作区到暂存区(add)</h3><p>作用：添加工作区一个或多个文件的修改到暂存区<br>命令形式：gitadd单个文件名|通配符</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将所有修改加入暂存区：</span></span><br><span class="line">git add .</span><br></pre></td></tr></table></figure>

<h3 id="提交暂存区到本地仓库-commit"><a href="#提交暂存区到本地仓库-commit" class="headerlink" title="*提交暂存区到本地仓库(commit)"></a>*提交暂存区到本地仓库(commit)</h3><p>作用：提交暂存区内容到本地仓库的当前分支 </p>
<p>命令形式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit -m &#x27;注释内容</span><br></pre></td></tr></table></figure>

<h3 id="查看提交日志-log"><a href="#查看提交日志-log" class="headerlink" title="查看提交日志(log)"></a>查看提交日志(log)</h3><p>作用:查看提交记录</p>
<p> 命令形式：git log [option]</p>
<ul>
<li>options<ul>
<li>–all 显示所有分支</li>
<li>–pretty&#x3D;oneline 将提交信息显示为一行</li>
<li>–abbrev-commit 使得输出的commitId更简短</li>
<li>–graph 以图的形式显示</li>
</ul>
</li>
</ul>
<h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3></div>]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
</search>
